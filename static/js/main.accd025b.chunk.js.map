{"version":3,"sources":["data.js","components/Product.js","components/Stock.js","components/TabContent.js","components/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","img","Product","props","stocks","useContext","StocksContext","className","to","item","src","width","Stock","stock","TabContent","useEffect","스위치변경","누른탭","React","Component","박스","styled","div","제목","h4","색상","Detail","useState","alert","alert변경","누른탭변경","스위치","console","log","타이머","setTimeout","clearTimeout","useParams","history","useHistory","shoe","shoes","find","onClick","newArray","stocks변경","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","createContext","App","Data","shoes변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","as","NavDropdown","Divider","exact","path","Jumbotron","Button","Provider","value","map","axios","get","then","result","data","push","shoes추가","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,GACb,CACEA,GAAI,EACJC,MAAO,kBACPC,QAAS,iBACTC,MAAO,KACPC,IAAK,kDAGP,CACEJ,GAAI,EACJC,MAAO,WACPC,QAAS,gBACTC,MAAO,KACPC,IAAK,kDAGP,CACEJ,GAAI,EACJC,MAAO,cACPC,QAAS,qBACTC,MAAO,KACPC,IAAK,mD,QCFMC,MAhBf,SAAiBC,GACf,IAAIC,EAASC,qBAAWC,GACxB,OACE,sBAAKC,UAAU,WAAf,UACE,cAAC,IAAD,CAAMC,GAAE,kBAAaL,EAAMM,KAAKZ,IAAhC,SACE,qBAAKa,IAAKP,EAAMM,KAAKR,IAAKU,MAAM,WAElC,6BAAKR,EAAMM,KAAKX,QAChB,8BACGK,EAAMM,KAAKV,QADd,MAC0BI,EAAMM,KAAKT,MADrC,YAGA,gDAASI,EAAOD,EAAMM,KAAKZ,W,6DCTlBe,MAJf,SAAeT,GACb,OAAO,gDAASA,EAAMU,UCeTC,MAhBf,SAAoBX,GAKlB,OAJAY,qBAAU,WACRZ,EAAMa,gCAAM,MAGI,IAAdb,EAAMc,mBACD,qBAAKV,UAAU,OAAf,0DACgB,IAAdJ,EAAMc,mBACR,qBAAKV,UAAU,OAAf,0DACgB,IAAdJ,EAAMc,mBACR,qBAAKV,UAAU,OAAf,oCAEA,qBAAKA,UAAU,OAAf,8C,4MCDWW,IAAMC,U,IAUxBC,EAAKC,IAAOC,IAAV,KAGFC,EAAKF,IAAOG,GAAV,KAEK,SAACrB,GAAD,OAAWA,EAAMsB,gBA6IbC,MA1If,SAAgBvB,GAAQ,IAAD,EACEwB,oBAAS,GADX,mBAChBC,EADgB,KACTC,EADS,OAEFF,mBAAS,IAFP,mBAGjBvB,GAHiB,UAGRC,qBAAWC,IAHH,EAIFqB,mBAAS,GAJP,mBAIhBV,EAJgB,KAIXa,EAJW,OAKFH,oBAAS,GALP,mBAKhBI,EALgB,KAKXf,EALW,KAerBD,qBAAU,WACRiB,QAAQC,IAAI,WACZ,IAAIC,EAAMC,YAAW,WAEnBH,QAAQC,IAAI,sBACZJ,GAAQ,KACP,KAEH,OAAO,WACLO,aAAaF,GACbF,QAAQC,IAAI,WAEb,CAACL,IA3BiB,IA6Bf/B,EAAOwC,cAAPxC,GACFyC,EAAUC,cAEVC,EAAOrC,EAAMsC,MAAMC,MAAK,SAACjC,GAAD,OAAUA,EAAKZ,IAAMA,KAEjD,OAAY,MAAR2C,EAAqB,+EAGvB,sBAAKjC,UAAU,YAAf,UACE,cAACa,EAAD,UACE,cAACG,EAAD,CAAIE,eAAG,OAAP,uBAMS,IAAVG,EACC,qBAAK/B,GAAG,WAAWU,UAAU,WAA7B,SACE,+GAEA,KAQJ,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKG,IAAK8B,EAAKvC,IAAKU,MAAM,WAE5B,sBAAKJ,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBiC,EAAK1C,QAC3B,4BAAI0C,EAAKzC,UACT,4BAAIyC,EAAKxC,QACT,cAAC,EAAD,CAAOa,MAAOT,EAAOoC,EAAK3C,MAC1B,wBACEU,UAAU,iBACVoC,QAAS,WACP,IAAIC,EAAQ,YAAOzC,EAAMC,QACzBwC,EAAS,KACTzC,EAAM0C,mBAASD,IALnB,sCAUA,wBACErC,UAAU,oBACVoC,QAAS,WACPL,EAAQQ,UAHZ,4CAmBJ,eAACC,EAAA,EAAD,CAAKxC,UAAU,OAAOyC,QAAQ,OAAOC,iBAAiB,SAAtD,UACE,cAACF,EAAA,EAAIG,KAAL,CAAU3C,UAAU,QAApB,SACE,cAACwC,EAAA,EAAII,KAAL,CACEC,SAAS,SACTT,QAAS,WACP3B,GAAM,GACNc,EAAM,IAJV,wCAUF,cAACiB,EAAA,EAAIG,KAAL,CAAU3C,UAAU,QAApB,SACE,cAACwC,EAAA,EAAII,KAAL,CACEC,SAAS,SACTT,QAAS,WACP3B,GAAM,GACNc,EAAM,IAJV,wCAUF,cAACiB,EAAA,EAAIG,KAAL,CAAU3C,UAAU,QAApB,SACE,cAACwC,EAAA,EAAII,KAAL,CACEC,SAAS,SACTT,QAAS,WACP3B,GAAM,GACNc,EAAM,IAJV,sBAYJ,cAACuB,EAAA,EAAD,CAAeC,GAAIvB,EAAKwB,WAAW,MAAMC,QAAS,IAAlD,SACE,cAAC,EAAD,CAAYvC,qBAAKA,EAAKD,iCAAOA,U,iBCrJxBV,EAAgBY,IAAMuC,cAAc,iBAyGlCC,MAvGf,WAAgB,IAAD,EACU/B,mBAASgC,GADnB,mBACRlB,EADQ,KACDmB,EADC,OAEYjC,mBAAS,CAAC,GAAI,GAAI,KAF9B,mBAERvB,EAFQ,KAEAyC,EAFA,KAab,OACE,sBAAKtC,UAAU,MAAf,UACE,eAACsD,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,wBACA,cAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBvE,GAAG,mBAApB,SACE,eAACkD,EAAA,EAAD,CAAKxC,UAAU,UAAf,UACE,cAACwC,EAAA,EAAII,KAAL,CAAUkB,GAAIlB,IAAM3C,GAAG,IAAvB,kBAGA,cAACuC,EAAA,EAAII,KAAL,CAAUkB,GAAIlB,IAAM3C,GAAG,YAAvB,oBAGA,eAAC8D,EAAA,EAAD,CAAaxE,MAAM,WAAWD,GAAG,qBAAjC,UACE,cAACyE,EAAA,EAAYpB,KAAb,CAAkBe,KAAK,cAAvB,oBACA,cAACK,EAAA,EAAYpB,KAAb,CAAkBe,KAAK,cAAvB,4BAGA,cAACK,EAAA,EAAYpB,KAAb,CAAkBe,KAAK,cAAvB,uBACA,cAACK,EAAA,EAAYC,QAAb,IACA,cAACD,EAAA,EAAYpB,KAAb,CAAkBe,KAAK,cAAvB,uCASR,eAAC,IAAD,WACE,eAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAlB,UACE,eAACC,EAAA,EAAD,CAAWnE,UAAU,aAArB,UACE,gDACA,+KAKA,4BACE,cAACoE,EAAA,EAAD,CAAQ3B,QAAQ,UAAhB,6BAIJ,sBAAKzC,UAAU,YAAf,UAEE,cAACD,EAAcsE,SAAf,CAAwBC,MAAOzE,EAA/B,SACE,qBAAKG,UAAU,MAAf,SACGkC,EAAMqC,KAAI,SAACrE,GACV,OACE,cAAC,EAAD,CACEA,KAAMA,EAENL,OAAQA,GADHK,EAAKZ,WAOpB,wBACEU,UAAU,kBACVoC,QAAS,WACPoC,IACGC,IAAI,kDACJC,MAAK,SAACC,GACLlD,QAAQC,IAAI,8BAAWiD,EAAOC,MAzElC,SAACA,GACb,IAAIvC,EAAQ,YAAOH,GACnB0C,EAAKL,KAAI,SAACrE,GACRA,EAAKR,IAAM,iDACX2C,EAASwC,KAAK3E,MAEhBmD,EAAQhB,GAoEQyC,CAAQH,EAAOC,SAEhBG,OAAM,WACLtD,QAAQC,IAAI,iCAVpB,sCAmBJ,cAAC3B,EAAcsE,SAAf,CAAwBC,MAAOzE,EAA/B,SACE,cAAC,IAAD,CAAOqE,KAAK,cAAZ,SACE,cAAC,EAAD,CAAQhC,MAAOA,EAAOrC,OAAQA,EAAQyC,qBAAUA,QAGpD,cAAC,IAAD,CAAO4B,KAAK,OAAZ,SACE,+FCpGKc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.accd025b.chunk.js","sourcesContent":["export default [\n  {\n    id: 0,\n    title: 'White and Black',\n    content: 'Born in France',\n    price: 120000,\n    img: 'https://codingapple1.github.io/shop/shoes1.jpg'\n  },\n\n  {\n    id: 1,\n    title: 'Red Knit',\n    content: 'Born in Seoul',\n    price: 110000,\n    img: 'https://codingapple1.github.io/shop/shoes2.jpg'\n  },\n\n  {\n    id: 2,\n    title: 'Grey Yordan',\n    content: 'Born in the States',\n    price: 130000,\n    img: 'https://codingapple1.github.io/shop/shoes3.jpg'\n  }\n]","import React, { useContext } from \"react\";\nimport App, { StocksContext } from \"../App\";\nimport { Link } from \"react-router-dom\";\n\nfunction Product(props) {\n  let stocks = useContext(StocksContext);\n  return (\n    <div className=\"col-md-4\">\n      <Link to={`/detail/${props.item.id}`}>\n        <img src={props.item.img} width=\"100%\" />\n      </Link>\n      <h4>{props.item.title}</h4>\n      <p>\n        {props.item.content} & {props.item.price}원\n      </p>\n      <p>재고 : {stocks[props.item.id]}</p>\n    </div>\n  );\n}\n\nexport default Product;\n","import React from \"react\";\n\nfunction Stock(props) {\n  return <p>재고 : {props.stock}</p>;\n}\n\nexport default Stock;\n","import React, { useEffect } from \"react\";\n\nfunction TabContent(props) {\n  useEffect(() => {\n    props.스위치변경(true);\n  });\n\n  if (props.누른탭 === 0) {\n    return <div className=\"mt-5\">상세 설명 페이지</div>;\n  } else if (props.누른탭 === 1) {\n    return <div className=\"mt-5\">이용 후기 페이지</div>;\n  } else if (props.누른탭 === 2) {\n    return <div className=\"mt-5\">Q&A 페이지</div>;\n  } else {\n    return <div className=\"mt-5\">모르는 내용</div>;\n  }\n}\n\nexport default TabContent;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Nav } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport \"../css/Detail.scss\";\nimport Stock from \"./Stock\";\nimport TabContent from \"./TabContent\";\n\nimport { StocksContext } from \"../App\";\nimport { CSSTransition } from \"react-transition-group\";\n\n// Life Cycle Hook 옛날에는 이렇게 component 생명 주기 관리.\n// 생성, 재랜더링, 삭제\nclass Detail2 extends React.Component {\n  componentDidMount() {\n    //Detail2 컴포넌트가 Mount 되고나서 실행할 코드\n  }\n\n  componentWillUnmount() {\n    //Detail2 컴포넌트가 Unmount 되기전에 실행할 코드\n  }\n}\n\nlet 박스 = styled.div`\n  padding: 20px;\n`;\nlet 제목 = styled.h4`\n  font-size: 20px;\n  color: ${(props) => props.색상};\n`;\n\nfunction Detail(props) {\n  let [alert, alert변경] = useState(true);\n  let [입력값, 입력값변경] = useState(\"\");\n  let stocks = useContext(StocksContext);\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n\n  let changeValue = (e) => {\n    입력값변경(e.target.value);\n  };\n\n  let submitValue = () => {\n    console.log(입력값);\n  };\n\n  useEffect(() => {\n    console.log(\"created\");\n    let 타이머 = setTimeout(() => {\n      // document.getElementById(\"my-alert\").style.display=\"none\";\n      console.log(\"alert 실행\");\n      alert변경(false);\n    }, 2000);\n\n    return () => {\n      clearTimeout(타이머);\n      console.log(\"exit\");\n    };\n  }, [alert]);\n\n  let { id } = useParams();\n  let history = useHistory();\n\n  let shoe = props.shoes.find((item) => item.id == id);\n\n  if (shoe == null) return <div>없는 상품입니다.</div>;\n\n  return (\n    <div className=\"container\">\n      <박스>\n        <제목 색상=\"blue\">Detail</제목>\n      </박스>\n\n      {/*<input onChange={changeValue} />*/}\n      {/*<button onClick={submitValue}>입력</button>*/}\n\n      {alert === true ? (\n        <div id=\"my-alert\" className=\"my-alert\">\n          <p>재고가 얼마 남지 않았습니다.</p>\n        </div>\n      ) : null}\n\n      {/*<div name=\"my-alert\" className=\"my-alert-red\">*/}\n      {/*  <p>재고가 얼마 남지 않았습니다.</p>*/}\n      {/*</div>*/}\n      {/*<div name=\"my-alert\" className=\"my-alert-black\">*/}\n      {/*  <p>재고가 얼마 남지 않았습니다.</p>*/}\n      {/*</div>*/}\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img src={shoe.img} width=\"100%\" />\n        </div>\n        <div className=\"col-md-6 mt-4\">\n          <h4 className=\"pt-5\">{shoe.title}</h4>\n          <p>{shoe.content}</p>\n          <p>{shoe.price}</p>\n          <Stock stock={stocks[shoe.id]}></Stock>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              let newArray = [...props.stocks];\n              newArray[0]--;\n              props.stocks변경(newArray);\n            }}\n          >\n            주문하기\n          </button>\n          <button\n            className=\"btn btn-info ml-1\"\n            onClick={() => {\n              history.goBack();\n            }}\n          >\n            뒤로가기\n          </button>\n          {/*<button*/}\n          {/*  className=\"btn btn-danger\"*/}\n          {/*  onClick={() => {*/}\n          {/*    history.push(\"/\");*/}\n          {/*  }}*/}\n          {/*>*/}\n          {/*  메인페이지로 이동*/}\n          {/*</button>*/}\n        </div>\n      </div>\n\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n        <Nav.Item className=\"col-4\">\n          <Nav.Link\n            eventKey=\"link-0\"\n            onClick={() => {\n              스위치변경(false);\n              누른탭변경(0);\n            }}\n          >\n            상세설명\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item className=\"col-4\">\n          <Nav.Link\n            eventKey=\"link-1\"\n            onClick={() => {\n              스위치변경(false);\n              누른탭변경(1);\n            }}\n          >\n            이용후기\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item className=\"col-4\">\n          <Nav.Link\n            eventKey=\"link-2\"\n            onClick={() => {\n              스위치변경(false);\n              누른탭변경(2);\n            }}\n          >\n            Q&A\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\n        <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\n      </CSSTransition>\n    </div>\n  );\n}\n\nexport default Detail;\n","import \"./App.css\";\nimport React, { useState, Suspense, lazy } from \"react\";\nimport { Button, Jumbotron, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport Data from \"./data\";\nimport Product from \"./components/Product\";\nimport Detail from \"./components/Detail\";\nimport axios from \"axios\";\nimport { Link, Route, Switch } from \"react-router-dom\";\n\n//const Product = lazy(() => import(\"./components/Product\"));\n//const Detail = lazy(() => import(\"./components/Detail\"));\n\n// 같은 값을 공유할 범위 context 설정\n// 외부 컴포넌트의 경우 export, import 사용 필요\nexport const StocksContext = React.createContext(\"StocksContext\");\n\nfunction App() {\n  let [shoes, shoes변경] = useState(Data);\n  let [stocks, stocks변경] = useState([10, 11, 12]);\n\n  let shoes추가 = (data) => {\n    let newArray = [...shoes];\n    data.map((item) => {\n      item.img = \"https://codingapple1.github.io/shop/shoes1.jpg\";\n      newArray.push(item);\n    });\n    shoes변경(newArray);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">Shoes mall</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/detail/0\">\n              Detail\n            </Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      {/* Switch : 라우터중에 가장 먼저 매칭되는거 선택해주세요.*/}\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season OFF</h1>\n            <p>\n              A Shoes sale is one that offers some sort of savings but only for\n              a short time. A good flash sale creates urgency, hype, and a spike\n              in sales.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n            {/*공유할 값을 value에 담는다.*/}\n            <StocksContext.Provider value={stocks}>\n              <div className=\"row\">\n                {shoes.map((item) => {\n                  return (\n                    <Product\n                      item={item}\n                      key={item.id}\n                      stocks={stocks}\n                    ></Product>\n                  );\n                })}\n              </div>\n            </StocksContext.Provider>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                axios\n                  .get(\"https://codingapple1.github.io/shop/data2.json\")\n                  .then((result) => {\n                    console.log(\"호출 성공 :\", result.data);\n                    shoes추가(result.data);\n                  })\n                  .catch(() => {\n                    console.log(\"호출 실패\");\n                  });\n              }}\n            >\n              더보기\n            </button>\n          </div>\n        </Route>\n\n        <StocksContext.Provider value={stocks}>\n          <Route path=\"/detail/:id\">\n            <Detail shoes={shoes} stocks={stocks} stocks변경={stocks변경} />\n          </Route>\n        </StocksContext.Provider>\n        <Route path=\"/:id\">\n          <div>잘못된 접근 입니다.</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}